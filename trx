#!/bin/bash

# IAROM MADDEN mail@iarom.org
#
# linux - termux macros
#
# most used handles
# - mosh.imp
# - sshfs.imp
# - ip.pull && trx mosh.imp
# - ip.pull && trx sshfs.imp
#
# shortcuts
#   a)              trx mosh.imp ;;
#   b)              trx sshfs.imp ;;

cmd=$1 && shift 1

## vars

trx_git_dir="$HOME/.local/share/aax/trx"
trx_cfg_dir="${XDG_CONFIG_HOME}/trx"
ssh_cfg_dir="${HOME}/.ssh"

host_i=$(cat "${ssh_cfg_dir}/host-i")

ip_gitshare="${trx_git_dir}/host-${host_i}-ip-wlan"
ip_manual="${ssh_cfg_dir}/host-${host_i}-ip-wlan"
ipi_mac="${ssh_cfg_dir}/host-${host_i}-ip-mac"

ipy="$(cat ${ip_gitshare} 2>/dev/null)"
ipx="$(cat ${ip_manual} 2>/dev/null)"
ipi="${ipx}"
ipm="$(cat ${ipi_mac} 2>/dev/null)"

#ip_nmap_ls="${ip_neutron_manual}_ls"


# termux vars

trx_r="/data/data/com.termux/files"
trx_h="/data/data/com.termux/files/home"
emu_r="/storage/emulated/0/0/"
cfg_sshd="$trx_r/usr/etc/ssh/sshd_config"

adr="$ipx:$emu_r"
sshfs_mnt="$HOME/.local/share/aaa/mnt/termux-a"
sshfs_mnb="$HOME/.local/share/aaa/mnt/termux-b"
sshfs_dst="$ipi:~/"


# funcs

_sshfs_cmd() {
    sshfs $sshfs_dst $sshfs_mnt -p 8022 -o follow_symlinks -oStrictHostKeyChecking=no -C $@
}

adb_set() {
    # 2nd call sets up http server on termux
    adb forward tcp:8022 tcp:8022
    adb forward tcp:8080 tcp:8080
}

_ssh()       { ssh -p 8022 $2 -i ~/.ssh/id_rsa "${ipi}" $@; }

_mosh()      { mosh --ssh="ssh -p 8022 -i ~/.ssh/id_rsa" "${ipi}" $@; }

_ip_resolv() {
    ipi="$(ip route show default | awk '{print $3}')"
    [ ! -n "$(ip neighbour show ${ipi} | grep ${ipm})" ] \
        && { echo "no match with recorded mac address"; exit; }
    echo "${ipi}" > "${ip_manual}"
}

_ip_git_pull()   {
    git -C ${trx_git_dir} pull
    cat ${ip_gitshare} > ${ip_manual} 2>/dev/null
}

_ip_git_push() {
    ip=$(ifconfig | grep -Eo 'inet (192\.168\.)[0-9]*\.[0-9]*' | sed -E 's/inet //g')
    [ ! -n $ip ] && \
        ip=$(ifconfig | grep -Eo 'inet (10\.137\.)[0-9]*\.[0-9]*' | sed -E 's/inet //g')

    printf "wlan ip: $ip ---> $ip_gitshare \n"
    printf "%s" "$ip" > $ip_gitshare
    
    git -C "$trx_git_dir" \
        commit $ip_gitshare -m "updating wlan ip file for trx"
    git -C "$trx_git_dir" \
        push
}

_ip_ssh_push() {
    # TASK: use ssh to push it directly to linux from termux.
    echo ""
    #rsync -avP ..
}

# nmap scan local hotspot for ip address
# - selects first one in list and saves it as the useable ip
# - android often assings device ip as ..244
# - the android device is usually below this - as the first one in the list
_ip_find() {
    nmap -n \
        -sn 192.168.64.0/24 \
        -oG - \
        | awk '/Up$/{print $2}' \
        | head -n 1 $ip_nmap_ls - > $ip_manual
    #> $ip_nmap_ls
}

_ip_find_10() {
    nmap -n \
        -sn 10.137.70.0/24 \
        -oG - \
        | awk '/Up$/{print $2}' \
        | tail -n 1 $ip_nmap_ls - > $ip_manual
    #> $ip_nmap_ls
}



# configure

_sshd_pass_switch() {
    printf "%s \n" "PrintMotd yes" \
        "PasswordAuthentication $1 " \
        "Subsystem sftp /data/data/com.termux/files/usr/libexec/sftp-server" > $cfg_sshd
}

exp_firefox() {
    dir_dat_moz="/data/data/org.mozilla.firefox/files/mozilla"
    exp_dst="/sdcard/0/d/tabs"
    exp_dst_cp="/sdcard/0s/firefox-backup"
    sqlite3 ${dir_dat_moz}/*.default/browser.db "SELECT url FROM tabs ORDER BY position" > ${exp_dst}
    cp ${dir_dat_moz}//*.default/ ${exp_dst_cp}
}



# rsync

rs-mv() {
    rsync -avP $opt \
        --remove-source-files \
        --prune-empty-dirs \
        -e 'ssh -p 8022' \
        $src $dst
}

rs-syc-cmd() {
    rsync -avP $opt \
        --delete \
        --exclude=$excl \
        -e 'ssh -p 8022' \
        $src $dst
}

rs-syc-lp() {
    src_ls=$(cat ${src_ls_file})
    
    for src in $src_ls; do
        [ ! -d $(readlink ${src_i}) ] && continue
        #src=$src_root/$src_i
        rs-syc-cmd
    done
}

rs-syc-ini() {
    src="$src_root$src_i/"
    dst="$hst:$dst_root$dst_i/"
}

r_for() {
    src_ls_file="$1"
    opt="$2"
    src_ls=$(cat $src_ls_file)
    
    for src in $src_ls; do
        if [ -d $(readlink $src) ]; then
            rs-syc-adbusb_2sd "$src_i" "$dst_i" $opt
        fi
    done
}


# bootstrap

bootstrap_init() {
    pkg upgrade
    pkg install git openssh neovim
    
    #TODO: upload ssh keys to github
    #TODO: upload an init script which is accessible public
}

bootstrap_clone() {
    git clone ssh://git@github.com/futuresurf/cfg .config.new
    mv .config .delete-config
    mv .config.new .config
    
    git clone ssh://git@github.com/futuresurf/cfgb .local/bin.new
    mv .local/bin .delete-bin
    mv .local/bin.new .local/bin

    git clone ssh://git@github.com/futuresurf/dd
    
    pkgdir=$HOME/.local/pkg
    [[ -d $pkgdir ]] || mkdir $pkgdir
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.local/pkg/powerlevel10k
}

bootstrap_install() {
    # pkg setup
    apt-get update # update package lists
    cat $trx_cfg_dir/pkgs-pkg.txt | xargs pkg install
    #cat $trx_cfg_dir/pkgs-apt.txt | xargs apt-get install -y
    #cat $trx_cfg_dir/pkgs-pip.txt | xargs pip install -y
    # Command which filters out matching patterns..?
    nvim -c 'PlugInstall'
}

bootstrap_configure() {
    # configure home
    
    chsh -s zsh
    termux-setup-storage
    # lng termux
    # other
    
}

bootstrap() {
    # - auto install package list
    # TODO
    # - Add prompts to confirm actions.. Or to begin ?
    # - Perhaps a set of initial prompts to trigger each section on or off..
    # - LINK FARM (after termux-setup-storage)
    # - zsh powerlevel10k setup 
    # - modify above to install powerlevel 10k and then use the location based on whether using termux..
    bootstrap_ini
    bootstrap_clone
    bootstrap_install
    bootstrap_configure
}


case $cmd in
# termux
    pkg_ls) ;;            # TODO: generate package lists
    sshd_p_on)            _sshd_pass_switch "yes" ;;
    sshd_p_off)           _sshd_pass_switch "no" ;;
    exp_firefox)          exp_firefox ;;
# linux connect
  # ip
    ip-echo|echo)           echo "${ipi}" ;;
    ip-echo-git)            echo "${ipy}" ;;
    ip-set-manual)          echo "$1" > $ip_manual ;;
    ip|ip-resolv)           _ip_resolv ;;
    ip-git-pull)            _ip_git_pull ;;
    ip-git-push)            _ip_git_push ;;
    ip-ssh-push)            _ip_ssh_push ;;
    ip-find-nmap)           _ip_find ;;
    #ip-set|ip-set-gitshare) echo "$1" > $ip_gitshare ;;
    #ip-set-a)              echo "192.168.$1" > $ip_manual ;;
  # ssh
    ssh|ssh-termux)       _ssh ;;
    ssh-neutron)          ipi="x@neutron"; _ssh ;;
    ssh-usb)              adb_set; ipi="localhost"; _ssh ;;
    ssh-copyid)           ssh-copy-id -p 8022 "${ipi}" ;;
  # mosh
    mosh|mosh-termux)     _mosh tmux ;;
    mosh-i)               _mosh tmux ;;
    mosh-x)               ipi="x@neutron"; _mosh tmux ;;
# sshfs
    sshfs|sshfs-termux)   _sshfs_cmd "${ipy}:~/"         $sshfs_mnt $@ ;;
    sshfs-manual)         _sshfs_cmd "${ipx}:~/"         $sshfs_mnt $@ ;;
    sshfs-x)              _sshfs_cmd "x@neutron:$emu_r" $sshfs_mnt $@ ;;
    sshfs-adb)            adb_set;  _sshfs_cmd "localhost:$emu_r" $sshfs_mnt $@ ;;
# syc & mv
    syc-2t)
        src="/dat/$1"
        dst="$ipi:~/0s/$2/"
        rs-syc-cmd ;;
    syc-2t-ls-a) #TODO
        src_ls_file="${trx-dir}/syc-list-aa"
        dst="$ipi:$(cat ${trx-dir}/syc-list-aa-dst)"
        rs-syc-lp ;;
    syc-2tx-ls-a) #TODO
        rs-syc-lp ;;
    syc-2l) #TODO
        src_i="$1"
        dst_i="$2"
        opt="$3"
        src_root="~/zs"
        dst_root="/data/ts"
        src="$ipi:$src_prfx/$src_i"
        dst="/dat/xs/$2"
        rs-syc
        ;;
    syc-2l-imp-full)
        # full backup of android 'storage' filesystem to /data
        src_i="/"
        dst_i="dr/syc.zs"
        drsycipf \
        ;;
    syc-2l-neutron)
        src_i=$1
        dst_i=$2
        ipi="x@neutron"
        src_base="~/zs"
        dst_base="/data/ts"
        src="$hst:$src_base/$src_i"
        dst="$dst_base/$dst_i"
        rs-syc
        ;;
# adb usb
    rs-syc-adbusb-2sd)
        # laptop as master branch
        src_i="$1"
        dst_i="$2"
        opt="$3"
            
        hst="localhost"
        src_root="/data/h/iao"
        dst_root="~/sac"
            
        src="$src_root/$src_i/"
        dst="$hst:$dst_root/$dst_i/"
        adb_set
        rs-syc
        ;;
    rs-syc-usb-2sd-ls-a)
        src_ls_file="/home/$USER/.local/bin/drlsaa"
        opt="$1"
        r_for $src_ls_file \
            $opt
        ## docs
        #.'if' test above is important for filtering out list items which arent directories 
        #.. each a typo which leads to the list item being root -
        #.. rclone then syncs the whole contents of root..
        #dst_prfx="$3"
        ;;
    syc-usb)
        ## syncing files with android as master branch
        ## vr
        src_i="$1/"
        dst_i="$2/"
        opt="$3"
            
        hst="localhost"
        src_root="~/zs"
        dst_root="/data/ts"
        src="$hst:$src_root/$src_i"
        dst="$dst_root/$dst_i"
        adb_set
        rs-syc $src $dst $opt
        ;;
    syc-usb_bkful)
        # full backup of android 'storage' filesystem
        src_i="/"
        dst_i="dr/syc.zs"
        adb_set
        rs-syc-cmd
        ;;
    syc-usb-2trx)
        src="/data/ts/$1"
        dst="localhost:~/zs/$2"
        adb_set
        rs-syc-cmd
        ;;
    mv-usb-2dat)
        src="~/$1"
        dst="localhost:/dat/ts/$2"
        adb_set
        rs-mv
        ;;
    mv-usb-2trx)
        hst="localhost"
        src_prfx="/data"
        dst_prfx="~/zs"
        src="$src_prfx/$1"
        dst="$hst:$dest_prfx/$2"
        adb_set
        rs-mv
        ;;
# adb settings push
    adb-neutron-settings)
        adb shell settings put secure icon_blacklist hotspot,mobile,battery
        #adb shell settings put secure icon_blacklist hotspot,mobile,battery,clock
        #adb shell content insert --uri content://settings/system --bind name:s:status_bar_show_battery_percent --bind value:i:1
        ;;
    bootstrap)
        bootstrap
        ;;
esac

#ip_neutron_gitshare="${trx_git_dir}/host-neutron-ip-wlan"
#ip_neutron_manual="${ssh_cfg_dir}/host-neutron-ip-wlan"
#ip_neutron_macadr="${ssh_cfg_dir}/host-neutron-ip-mac"

