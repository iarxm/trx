#!/bin/env bash

# IAROM MADDEN mail@iarom.org

# - [ ] setup ip_res - resolved ip locally file as separate from 'ip_man'

cmd=${1} && shift 1

trx_git_dir="${HOME}/.local/share/aax/trx"
ssh_cfg_dir="${HOME}/.ssh"
ipi=$(cat "${ssh_cfg_dir}/host-i" 2>/dev/null) # hostname
ipn=$(cat "${ssh_cfg_dir}/host-net" 2>/dev/null) # network of host
ip_git="${trx_git_dir}/host-${ipi}-ip-${ipn}-gitshare" # ip shared via git
ip_man="${ssh_cfg_dir}/host-${ipi}-ip-${ipn}-man"
ip_mac="${ssh_cfg_dir}/host-${ipi}-ip-mac" # gateway interface mac address
trx_h="/data/data/com.termux/files/home"

adb_set()
{
    # second call sets up http server on termux
    # ssh on localhost auto connects to 8080?
    adb forward tcp:8022 tcp:8022
    adb forward tcp:8080 tcp:8080
}

# domain resolution

ip_resolv()
{
    ipi="$(ip neigh show default | awk '{print $1}' | head -n1)"
    ip_resolv_i
}

ip_resolv_x()
{
    # ssh config fails with ip6 setup
    ipi="$(ip neigh show default | grep router | awk '{print $1}' | tail -n1)"
    ip_resolv_i
}

ip_resolv_y()
{
    ipi="$(ip route show default | awk '{print $3}')"
    ip_resolv_i
}

ip_resolv_i()
{
    [ -n "$(ip neighbour show ${ipi} | grep $(cat ${ip_mac}))" ] \
        || { echo "no match with recorded mac address"; exit; }
    echo "ip: ${ipi}"
    echo "${ipi}" > "${ip_man}"
}

ip_resolv_mac()
{
    ipm="$(ip neigh show default | grep router | awk '{print $5}' | head -n1)"
    echo "${ipm}" > "${ip_mac}"
}

ip_git_pull()
{
    git -C ${trx_git_dir} pull
    cat ${ip_git} > ${ip_man} 2>/dev/null
}

ip_git_push()
{
    ip=$(ifconfig | grep -Eo 'inet (192\.168\.)[0-9]*\.[0-9]*' | sed -E 's/inet //g')
    [ ! -n $ip ] && \
        ip=$(ifconfig | grep -Eo 'inet (10\.137\.)[0-9]*\.[0-9]*' | sed -E 's/inet //g')

    printf "wlan ip: ${ip} ---> ${ip_gitshare} \n"
    printf "%s" "${ip}" > ${ip_git}
    
    git -C "${trx_git_dir}" commit ${ip_git} -m "wlan update"
    git -C "${trx_git_dir}" push
}

ip_ssh_push()
{
    # TASK: use ssh to push it directly to linux from termux.
    echo ""
    #rsync -avP ..
}

ip_nmap()
{
    nmap -n \
        -sn 192.168.64.0/24 \
        -oG - \
        | awk '/Up$/{print $2}' \
        | head -n 1 ${ip_nmap_ls} - > ${ip_man}
    #> $ip_nmap_ls
}

ip_nmap_10()
{
    nmap -n \
        -sn 10.137.70.0/24 \
        -oG - \
        | awk '/Up$/{print $2}' \
        | tail -n 1 ${ip_nmap_ls} - > ${ip_man}
    #> $ip_nmap_ls
}

case ${cmd} in
    eh|echo-host)        echo ${ipi} ;;
    em|echo-man|e)       echo $(cat "${ip_man}") ;;
    eg|echo-git)         echo $(cat "${ip_git}") ;;
    em|echo-mac)         echo $(cat "${ip_mac}") ;;
    sm|set-man)          echo "${1}" > ${ip_man} ;;
    rm|set-mac)          ip_resolv_mac ;;
    ri|resolv)           ip_resolv ;;
    g|git-pull)          ip_git_pull ;;
    p|git-push)          ip_git_push ;;
    ssh-push)            ip_ssh_push ;;
    resolv-nmap)         ip_nmap ;;
    adb)                 adb_set ;;
esac

# - [ ] consider dns hook upon networkmanager event for connecting
# to hotspot, to resolve gateway ip with hostname and inject
# reduces complexity of current ssh proxycommand method and external script

